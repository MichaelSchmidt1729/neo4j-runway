server_uri: bolt://localhost:7687
admin_user: neo4j
admin_pass: password
basepath: file:./

pre_ingest:
  - CREATE CONSTRAINT loan_loannumber IF NOT EXISTS FOR (n:Loan) REQUIRE n.loannumber IS UNIQUE;
  - CREATE CONSTRAINT borrower_borrowername IF NOT EXISTS FOR (n:Borrower) REQUIRE n.borrowername IS UNIQUE;
files:
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows AS row
    MERGE (n:Loan {loannumber: row.LoanNumber})
    SET n.jobsreported = row.JobsReported, n.currentapprovalamount = row.CurrentApprovalAmount
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |
    WITH $dict.rows AS rows
    UNWIND rows AS row
    MERGE (n:Borrower {borrowername: row.BorrowerName})
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows AS row
    MERGE (n:Business {})
    SET n.businesstype = row.BusinessType
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows AS row
    MERGE (n:State {})
    SET n.projectstate = row.ProjectState
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows AS row
    MERGE (n:Lender {})
    SET n.originatinglender = row.OriginatingLender
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows AS row
    MERGE (n:LoanProceed {})
    SET n.health_care_proceed = row.HEALTH_CARE_PROCEED, n.rent_proceed = row.RENT_PROCEED, n.payroll_proceed = row.PAYROLL_PROCEED, n.utilities_proceed = row.UTILITIES_PROCEED, n.debt_interest_proceed = row.DEBT_INTEREST_PROCEED, n.refinance_eidl_proceed = row.REFINANCE_EIDL_PROCEED, n.mortgage_interest_proceed = row.MORTGAGE_INTEREST_PROCEED
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows as row
    MATCH (source:Borrower{borrowername: row.BorrowerName})
    MATCH (target:Loan{loannumber: row.LoanNumber})
    MERGE (source)-[:BORROWED]->(target)
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows as row
    MATCH (source:Loan{loannumber: row.LoanNumber})
    MATCH (target:Business{})
    MERGE (source)-[:BELONGS_TO]->(target)
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows as row
    MATCH (source:Loan{loannumber: row.LoanNumber})
    MATCH (target:State{})
    MERGE (source)-[:LOCATED_IN]->(target)
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows as row
    MATCH (source:Loan{loannumber: row.LoanNumber})
    MATCH (target:Lender{})
    MERGE (source)-[:ORIGINATED_BY]->(target)
  url: $BASE/data/csv/ppp_loan_data.csv
- chunk_size: 100
  cql: |-
    WITH $dict.rows AS rows
    UNWIND rows as row
    MATCH (source:Loan{loannumber: row.LoanNumber})
    MATCH (target:LoanProceed{})
    MERGE (source)-[:PROCEED_USED_FOR]->(target)
  url: $BASE/data/csv/ppp_loan_data.csv
